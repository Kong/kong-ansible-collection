---
- name: "Ensure binary is present"
  become: True
  block:
    - name: "Check for presence of binary | {{ k4k8s_deploy_bin_version_info[__k4k8s_deploy_tarball__.name]['destination'] }}/{{ __k4k8s_deploy_tarball__.name }}"
      ansible.builtin.file:
        path: "{{ k4k8s_deploy_bin_version_info[__k4k8s_deploy_tarball__.name]['destination'] }}/{{ __k4k8s_deploy_tarball__.name }}"
        mode: "0755"
        state: "file"
  rescue:
    - name: "Ensure tarball for binary installation is present | {{ __k4k8s_deploy_tarball__.name }}"
      ansible.builtin.get_url:
        checksum: "{{ k4k8s_deploy_bin_version_info[__k4k8s_deploy_tarball__.name]['checksum'][ansible_system | lower][ansible_architecture] }}"
        dest: "{{ __k4k8s_deploy_download_dir__.path }}/{{ __k4k8s_deploy_tarball__.dl_filename }}"
        force: True
        timeout: 30
        url: "{{ __k4k8s_deploy_tarball__.url }}"
        use_proxy: "{{ k4k8s_deploy_bin_install_proxy_enabled | default(omit) }}"
    
    - name: "Ensure tarball for binary installation is extracted | {{ __k4k8s_deploy_tarball__.name }}"
      ansible.builtin.unarchive:
        creates: "{{ __k4k8s_deploy_download_dir__.path }}/{{ __k4k8s_deploy_tarball__.extracted_dir }}/{{ __k4k8s_deploy_tarball__.name }}"
        dest: "{{ __k4k8s_deploy_download_dir__.path }}"
        remote_src: True
        src: "{{ __k4k8s_deploy_download_dir__.path }}/{{ __k4k8s_deploy_tarball__.dl_filename }}"
    
    - name: "Ensure binary is present | {{ __k4k8s_deploy_tarball__.destination }}/{{ __k4k8s_deploy_tarball__.name }}"
      ansible.builtin.copy:
        backup: True
        dest: "{{ k4k8s_deploy_bin_version_info[__k4k8s_deploy_tarball__.name]['destination'] }}/{{ __k4k8s_deploy_tarball__.name }}"
        force: True
        mode: "0755"
        remote_src: True
        src: "{{ __k4k8s_deploy_download_dir__.path }}/{{ __k4k8s_deploy_tarball__.extracted_dir }}/{{ __k4k8s_deploy_tarball__.name }}"