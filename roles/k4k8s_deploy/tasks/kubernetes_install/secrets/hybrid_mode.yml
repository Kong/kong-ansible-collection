---
- name: "Fail when attempting to create both control-plane and data-plane hybrid-mode certificates"
  ansible.builtin.fail:
    msg:
      - "Both 'k4k8s_deploy_create_hybrid_mode_cp_cert_secret' and 'k4k8s_deploy_create_hybrid_mode_dp_cert_secret' were set."
      - "These settings are mutually exclusive, and only 1 can be on at the same time."
  when:
    - "k4k8s_deploy_create_hybrid_mode_cp_cert_secret | bool"
    - "k4k8s_deploy_create_hybrid_mode_dp_cert_secret | bool"
  tags:
    - "skip_for_test"

- name: "Ensure kong enterprise hybrid-mode certificate and secret is present"
  when: (k4k8s_deploy_create_hybrid_mode_cp_cert_secret | bool) or
        (k4k8s_deploy_create_hybrid_mode_dp_cert_secret | bool)
  block:
    - name: "Validate if existing hybrid-mode certificate secret exists"  # for idempotency
      kubernetes.core.k8s_info:
        context: "{{ k4k8s_deploy_cluster_context | default(omit) }}"
        kubeconfig: "{{ k4k8s_deploy_kubeconfig | default(omit) }}"
        kind: "Secret"
        name: "{{ k4k8s_deploy_hybrid_mode_cert_secret_name }}"
        namespace: "{{ k4k8s_deploy_namespace }}"
        wait: false
      register: "__k4k8s_deploy_hybrid_mode_cert_presence__"
      failed_when: "__k4k8s_deploy_hybrid_mode_cert_presence__['resources'] | length < 1"

  rescue:
    - name: "Begin hybrid-mode certificate creation process"
      ansible.builtin.debug:
        msg:
          - "The {{ k4k8s_deploy_hybrid_mode_cert_secret_name }} secret did not exist in namespace {{ k4k8s_deploy_namespace }}, creating it now."
          - "If you would like to recreate the secret, remove it from your Kubernetes or Red Hat OpenShift cluster and try again."

    - name: "Ensure kong enterprise hybrid-mode control-plane certificate and secret is present"
      when: "k4k8s_deploy_create_hybrid_mode_cp_cert_secret | bool"
      block:
        - name: "Ensure openssl private key for hybrid-mode control-plane is generated"
          community.crypto.openssl_privatekey_pipe:
            curve: "secp384r1"
            size: 2048
            type: "RSA"
          register: "__k4k8s_deploy_openssl_key__"

        - name: "Ensure openssl certificate signing request is generated"
          community.crypto.openssl_csr_pipe:
            common_name: "{{ k4k8s_deploy_hybrid_mode_cert_common_name | default(omit) }}"
            privatekey_content: "{{ __k4k8s_deploy_openssl_key__['privatekey'] }}"
          register: "__k4k8s_deploy_openssl_csr__"

        - name: "Ensure x509 certificate for hybrid-mode control-plane is generated"
          community.crypto.x509_certificate_pipe:
            csr_content: "{{ __k4k8s_deploy_openssl_csr__['csr'] }}"
            privatekey_content: "{{ __k4k8s_deploy_openssl_key__['privatekey'] }}"
            provider: "selfsigned"
            selfsigned_not_after: "+{{ k4k8s_deploy_hybrid_mode_cert_expiration | default(1095) }}d"
          register: "__k4k8s_deploy_x509_cert__"

        - name: "Ensure the kong enterprise hybrid-mode control-plane certificate and secret is present"
          kubernetes.core.k8s:
            state: "present"
            definition: "{{ lookup('template', 'templates/secret-hybrid-mode-cp-cert.yaml.j2' | from_yaml) }}"

    - name: "Ensure hybrid-mode control-plane secret is present"
      when: "k4k8s_deploy_create_hybrid_mode_dp_cert_secret | bool"
      block:
        - name: "Ensure control-plane kubeconfig or context was provided"
          ansible.builtin.fail:
            msg:
              - "When creating a Kong Enterprise data-plane hybrid-mode certificate secret, "
              - "you must have a control-plane cluster context set, or a control-plane kubeconfig set, or both."
              - "'k4k8s_deploy_hybrid_mode_cert_harvest_cluster_context' was not set"
              - "'k4k8s_deploy_hybrid_mode_cert_harvest_kubeconfig' was not set"
          when:
            - "k4k8s_deploy_hybrid_mode_cert_harvest_cluster_context is not defined"
            - "k4k8s_deploy_hybrid_mode_cert_harvest_kubeconfig is not defined"
          tags:
            - "skip_for_test"

        - name: "Ensure the hybrid-mode secret is collected from the kong enterprise control-plane"
          kubernetes.core.k8s_info:
            context: "{{ k4k8s_deploy_hybrid_mode_cert_harvest_cluster_context | default(omit) }}"
            kind: "Secret"
            kubeconfig: "{{ k4k8s_deploy_hybrid_mode_cert_harvest_kubeconfig | default(omit) }}"
            name: "{{ k4k8s_deploy_hybrid_mode_cert_secret_name }}"
            namespace: "{{ k4k8s_deploy_namespace }}"
          register: "__k4k8s_deploy_cp_hybrid_secret__"

        - name: "Ensure the kong enterprise hybrid-mode data-plane certificate and secret is present"
          kubernetes.core.k8s:
            state: "present"
            definition: "{{ lookup('template', 'templates/secret-hybrid-mode-dp-cert.yaml.j2' | from_yaml) }}"
