---
# following 2 vars used to a) setup remote files/values test and b) just work for local files/values test c) overridden by include_vars for remote files/values
k4k8s_deploy_helm_chart_values_files:
  - "values.yaml"
k4k8s_deploy_yaml_manifest_paths:
  - "yamls/cluster-role-binding.yaml"
  - "yamls/cluster-role.yaml"
  - "yamls/ingress-class.yaml"
  - "yamls/init-migrations.yaml"
  - "yamls/kong-admin-svc.yaml"
  - "yamls/kong-manager-svc.yaml"
  - "yamls/kong-portal-svc.yaml"
  - "yamls/kong-portalapi-svc.yaml"
  - "yamls/kong-proxy-svc.yaml"
  - "yamls/postgres-statefulset.yaml"
  - "yamls/postgres-svc.yaml"
  - "yamls/postgres-svc1.yaml"
  - "yamls/role-binding.yaml"
  - "yamls/role.yaml"
  - "yamls/service-account.yaml"
  - "yamls/wait-for-postgres.yaml"
  - "yamls/kong-deployment.yaml"

# Test deployment mechanism ("helm" | "yaml_manifest")
k4k8s_deploy_method: "{{ deploy_method }}" # passed from GH actions matrix

# Test all install mechanisms
k4k8s_deploy_install_binary_dependencies: true
k4k8s_deploy_install_python_dependencies: true
k4k8s_deploy_install_ansible_collection_dependencies: true

# Test all secret creation mechanisms
k4k8s_deploy_create_enterprise_superuser_password_secret: true
k4k8s_deploy_create_enterprise_license_secret: true
k4k8s_deploy_create_hybrid_mode_cp_cert_secret: true
k4k8s_deploy_create_hybrid_mode_dp_cert_secret: true
k4k8s_deploy_create_admin_gui_sessions_conf_secret: true
k4k8s_deploy_create_portal_sessions_conf_secret: true
k4k8s_deploy_create_postgres_password_secret: true
k4k8s_deploy_admin_gui_sessions_settings:
  cookie_lifetime: 3600
  cookie_name: "please-change-me"
  cookie_renew: 600
  cookie_samesite: "off"
  cookie_secure: false
  secret: "please-change-me"
  storage: "cookie"
k4k8s_deploy_portal_sessions_settings:
  cookie_domain: ".dev.mydomain.com"
  cookie_lifetime: 3600
  cookie_name: "please-change-me"
  cookie_renew: 600
  cookie_samesite: "off"
  cookie_secure: false
  secret: "please-change-me"
  storage: "cookie"


# Test recursive helm values override mechanism
k4k8s_deploy_helm_chart_values: # override admin_api_uri
  env:
    admin_api_uri: "http://{{ k8s_instance }}:30433" # nodeport forced in values file



### migrated from original role functionality
# Python
k4k8s_deploy_python_module_deps:
  - "kubernetes"

## pip
# k4k8s_deploy_pyvenv_path: ""  # set if you need to specify your python virtual environment path for module installs
k4k8s_deploy_python_package_manager: "pip"

k4k8s_deploy_pip_executable_path: "pip3"
k4k8s_deploy_python_umask: "0022"


## pipx
k4k8s_deploy_pipx_package: "ansible-core"  # set to function within default GitHub Actions runners
k4k8s_deploy_pipx_executable_path: "pipx"

# Ansible
k4k8s_deploy_ansible_collection_deps:
  - "community.general"
  - "kubernetes.core"

k4k8s_deploy_ansible_collection_deps_hybrid_certs:
  - "community.crypto"

# k4k8s_deploy_ansible_collection_path: ""
k4k8s_deploy_ansible_galaxy_executable_path: "ansible-galaxy"

# Binaries
k4k8s_deploy_bin_deps: []

k4k8s_deploy_bin_deps_helm_method:
  - "helm"

# k4k8s_deploy_bin_install_proxy_enabled: True  # Uncomment if you have set an environment var on your target hosts

## the following is a table for all tarballs which is leveraged by the k4k8s_deploy_install_bin_tarballs* vars and must be listed prior to them
k4k8s_deploy_bin_version_info:
  helm:
    checksum:
      linux:
        x86_64: "sha256:1484ffb0c7a608d8069470f48b88d729e88c41a1b6602f145231e8ea7b43b50a"
    version: "v3.9.0"
    baseurl: "https://get.helm.sh"
    extension: "tar.gz"
    destination: "/usr/local/bin"


k4k8s_deploy_install_bin_tarballs: []

k4k8s_deploy_install_bin_tarballs_helm_method:
  - name: "helm"
    extracted_dir: "{{ ansible_system | lower }}-{{ ansible_architecture | regex_replace('x86_64', 'amd64') }}"
    dl_filename: "helm-{{ k4k8s_deploy_bin_version_info['helm']['version'] }}-{{ ansible_system | lower }}-{{ ansible_architecture | regex_replace('x86_64', 'amd64') }}.{{ k4k8s_deploy_bin_version_info['helm']['extension'] }}"
    url: "{{ k4k8s_deploy_bin_version_info['helm']['baseurl'] }}/helm-{{ k4k8s_deploy_bin_version_info['helm']['version'] }}-{{ ansible_system | lower }}-{{ ansible_architecture | regex_replace('x86_64', 'amd64') }}.{{ k4k8s_deploy_bin_version_info['helm']['extension'] }}"
