---
- name: "Dump ansible_facts"
  ansible.builtin.debug:
    var: "ansible_facts"

- name: "Test setup | Prepare CentOS 8 appstream repos"
  when:
    - "ansible_distribution == 'CentOS'"
    - "ansible_distribution_major_version == '8'"
  block:
    - name: "CentOS 8 | Enable baseurl"
      ansible.builtin.replace:
        path: "/etc/yum.repos.d/{{ item }}.repo"
        regexp: "#"
        replace: ""
      with_items:
        - "CentOS-Linux-AppStream"
        - "CentOS-Linux-BaseOS"
        - "CentOS-Linux-ContinuousRelease"
        - "CentOS-Linux-Debuginfo"
        - "CentOS-Linux-Devel"
        - "CentOS-Linux-Extras"
        - "CentOS-Linux-FastTrack"
        - "CentOS-Linux-HighAvailability"
        - "CentOS-Linux-Media"
        - "CentOS-Linux-Plus"
        - "CentOS-Linux-PowerTools"
        - "CentOS-Linux-Sources"
      become: true

- name: "Test setup | Ensure collections are available"
  ansible.builtin.command: "ansible-galaxy collection install community.general"
  delegate_to: "localhost"

- name: "Test setup | include common test variables"
  ansible.builtin.include_vars: "common.yml"

- name: "Test setup | Install python dependencies"
  ansible.builtin.include_tasks: "prerequisite_install/py_prereqs.yml"
  when: "k4k8s_deploy_install_python_dependencies | bool"

# - name: "Validate python dependencies"
#   ansible.builtin.include_tasks: "validate/call_chk_py_prereqs.yml"
#   when: "k4k8s_deploy_validate_python_dependencies | bool"

- name: "Test setup | Ensure hybrid mode certificate ansible collection dependencies are included"
  ansible.builtin.set_fact:
    k4k8s_deploy_ansible_collection_deps: "{{ k4k8s_deploy_ansible_collection_deps | union(k4k8s_deploy_ansible_collection_deps_hybrid_certs) }}"
  when: (k4k8s_deploy_install_ansible_collection_dependencies | bool and k4k8s_deploy_create_hybrid_mode_cp_cert_secret | bool) or
        (k4k8s_deploy_validate_ansible_collection_dependencies | bool and k4k8s_deploy_create_hybrid_mode_cp_cert_secret | bool)

- name: "Test setup | Install ansible collection dependencies"
  ansible.builtin.include_tasks: "prerequisite_install/ansible_collection_prereqs.yml"
  when: "k4k8s_deploy_install_ansible_collection_dependencies | bool"
  tags:
    - "install_deps"
    - "install_collection_deps"

# - name: "Test setup | Validate ansible collection dependencies"
#   ansible.builtin.include_tasks: "validate/call_chk_ansible_collection_prereqs.yml"
#   when: "k4k8s_deploy_validate_ansible_collection_dependencies | bool"
#   tags:
#     - "validate_deps"
#     - "validate_collection_deps"

- name: "Ensure helm dependencies are included"
  ansible.builtin.set_fact:
    k4k8s_deploy_bin_deps: "{{ k4k8s_deploy_bin_deps | union(k4k8s_deploy_bin_deps_helm_method) }}"
    k4k8s_deploy_install_bin_tarballs: "{{ k4k8s_deploy_install_bin_tarballs | union(k4k8s_deploy_install_bin_tarballs_helm_method) }}"
  when: "k4k8s_deploy_method == 'helm'"

- name: "Install binary dependencies"
  ansible.builtin.include_tasks: "prerequisite_install/bin_prereqs.yml"
  when: "k4k8s_deploy_install_binary_dependencies | bool"

# - name: "Test setup | Validate binary dependencies"
#   ansible.builtin.include_tasks: "validate/call_chk_bin_prereqs.yml"
#   when: "k4k8s_deploy_validate_binary_dependencies | bool"

- name: "Test setup | Ensure kubeconfig is on remote target"
  become: true
  block:
    - name: "Test setup | Edit kubeconfig for test container to access kubernetes running on host"
      ansible.builtin.replace:
        path: "{{ local_kubeconfig }}"
        regexp: "127.0.0.1"
        replace: "{{ k8s_instance }}"
      delegate_to: "localhost"

    - name: "Test setup | Create kubeconfig directory on target"
      ansible.builtin.file:
        state: "directory"
        path: "/root/.kube"
        mode: "0755"
        owner: "root"
        group: "root"

    - name: "Test setup | Copy kubeconfig to target"
      ansible.builtin.copy:
        src: "{{ local_kubeconfig }}"
        dest: "/root/.kube/config"
        mode: "0600"
        owner: "root"
        group: "root"

- name: "Test setup (remote) | Copy files to remote"
  when: "values_location == 'remote_values'"
  block:
    - name: "Test setup (remote) | Create temp directory"
      ansible.builtin.tempfile:
        state: "directory"
        prefix: "k4k8s_deploy_setup"
      register: "__k4k8s_deploy_setup_dir__"

    - name: "Test setup (remote) | Copy files to remote"
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: "{{ __k4k8s_deploy_setup_dir__['path'] }}/{{ item | basename }}"
        mode: "0755"
      with_items:
        - "{{ k4k8s_deploy_helm_chart_values_files }}"
        - "{{ k4k8s_deploy_yaml_manifest_paths }}"

- name: "Test setup | include {{ values_location }} variables"
  ansible.builtin.include_vars: "{{ values_location }}.yml"

- name: "Test | k4k8s-deploy role"
  ansible.builtin.include_role:
    name: "k4k8s_deploy"
    public: true # so we can validate using the same role variables later

- name: "Validate deployment"
  ansible.builtin.include_tasks: "validate_deployment.yml"
